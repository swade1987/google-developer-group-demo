kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: {{ .Values.server.name }}
  labels:
    app_name: {{ .Values.server.name }}
    app_version: {{ .Values.server.image.tag | quote }}
    helm_chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  revisionHistoryLimit: 30
  replicas: {{ .Values.server.replicas }}
  selector:
    matchLabels:
      app_name: {{ .Values.server.name }}
  template:
    metadata:
      labels:
        app_name: {{ .Values.server.name }}
        app_version: {{ .Values.server.image.tag | quote }}
        helm_chart: {{ .Chart.Name }}-{{ .Chart.Version }}
{{- if .Values.server.podAnnotations }}
    annotations:
{{ toYaml .Values.server.podAnnotations | indent 8}}
{{- end }}
    spec:
      containers:
      - name: {{ .Values.configmapReload.name }}
        image: "{{ .Values.configmapReload.image.repository }}/{{ .Values.configmapReload.image.name }}:{{ .Values.configmapReload.image.tag }}"
        imagePullPolicy: "{{ .Values.configmapReload.image.pullPolicy }}"
        args:
          - --volume-dir=/etc/config
          - --webhook-url=http://localhost:9090/-/reload
        resources:
{{ toYaml .Values.configmapReload.resources | indent 12 }}
        volumeMounts:
          - name: config-volume
            mountPath: /etc/config
            readOnly: true
      - name: {{ .Values.server.name }}
        image: "{{ .Values.server.image.repository }}/{{ .Values.server.image.name }}:{{ .Values.server.image.tag }}"
        imagePullPolicy: "{{ .Values.server.image.pullPolicy }}"
        args:
          - --config.file=/etc/config/prometheus.yml
          - --storage.local.path={{ .Values.server.persistentVolume.mountPath }}
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
        {{- range $key, $value := .Values.server.extraArgs }}
          - --{{ $key }}={{ $value }}
        {{- end }}
        ports:
          - containerPort: 9090
        readinessProbe:
          httpGet:
            path: /status
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        resources:
{{ toYaml .Values.server.resources | indent 12 }}
        volumeMounts:
          - name: config-volume
            mountPath: /etc/config
          - name: storage-volume
            mountPath: {{ .Values.server.persistentVolume.mountPath }}
      terminationGracePeriodSeconds: {{ .Values.server.terminationGracePeriodSeconds }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.server.name }}
        - name: storage-volume
          persistentVolumeClaim:
            claimName: {{ .Values.server.name }}